/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import DTO.condicionDTO;
import DTO.reservaDTO;
import Datos.aula;
import Datos.clase;
import Datos.docente;
import Logica.gestorAula;
import Logica.gestorClase;
import Logica.gestorDocente;
import Logica.gestorReservas;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexis Mandracchia
 */

public class registrarReserva extends javax.swing.JFrame {

    private String sfecha;
    private List<docente> docentes;
    private List<clase> clases;
    

    /**
     * Creates new form menuBedel
     */
    public registrarReserva() {
        initComponents();
        
       
        fechaCombo.getJCalendar().setMinSelectableDate(new Date());
        this.setLocationRelativeTo(null);
        this.esporadica.setSelected(true);
        this.fechaCombo.setDate(new Date());
        this.errorFecha.setVisible(false);
        this.errorDuracion.setVisible(false);
        this.errorHorario.setVisible(false);
        
        this.duracionPero1.setVisible(false);
        this.duracionPero2.setVisible(false);
        this.duracionPero3.setVisible(false);
        this.duracionPero4.setVisible(false);
        this.duracionPero5.setVisible(false);
        this.duracionPero6.setVisible(false);
        this.horariosPero1.setVisible(false);
        this.horariosPero2.setVisible(false);
        this.horariosPero3.setVisible(false);
        this.horariosPero4.setVisible(false);
        this.horariosPero5.setVisible(false);
        this.horariosPero6.setVisible(false);
        this.peroBox1.setVisible(false);
        this.peroBox2.setVisible(false);
        this.peroBox3.setVisible(false);
        this.peroBox4.setVisible(false);
        this.peroBox5.setVisible(false);
        this.peroBox6.setVisible(false);
        this.perodi1.setVisible(false);
        this.perodi2.setVisible(false);
        this.perodi3.setVisible(false);
        this.perodi4.setVisible(false);
        this.perodi5.setVisible(false);
        this.perodi6.setVisible(false);
        this.perodi7.setVisible(false);
        this.periodo.setVisible(false);
        
        docentes = gestorDocente.obtenerDocentes();
        
        for(docente doc: docentes){
           this.docenteCombo.addItem(doc.apellido + ", " + doc.nombre);
        }
        
        clases = gestorClase.getClases();
        
        for(clase Clase : clases){
           this.catedraCombo.addItem(Clase.nombre);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reserva = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        logoUTN = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        deEspo = new javax.swing.JLabel();
        fechaCombo = new com.toedter.calendar.JDateChooser();
        horarioEspo = new javax.swing.JLabel();
        horariosEspo = new javax.swing.JFormattedTextField();
        horarioEspo1 = new javax.swing.JLabel();
        horarioEspo2 = new javax.swing.JLabel();
        horarioEspo3 = new javax.swing.JLabel();
        listaFechas = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        duracionEspo = new javax.swing.JFormattedTextField();
        agregarEspo = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        cant_alumnos = new javax.swing.JLabel();
        cantAlumnosText = new javax.swing.JTextField();
        cant_alumnos1 = new javax.swing.JLabel();
        tipoAulaCombo = new javax.swing.JComboBox<>();
        cant_alumnos2 = new javax.swing.JLabel();
        cant_alumnos3 = new javax.swing.JLabel();
        docenteCombo = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        cant_alumnos4 = new javax.swing.JLabel();
        catedraCombo = new javax.swing.JComboBox<>();
        aceptarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        periodica = new javax.swing.JRadioButton();
        esporadica = new javax.swing.JRadioButton();
        errorFecha = new javax.swing.JLabel();
        errorHorario = new javax.swing.JLabel();
        errorDuracion = new javax.swing.JLabel();
        eliminarEspo = new javax.swing.JButton();
        perodi1 = new javax.swing.JLabel();
        peroBox1 = new javax.swing.JCheckBox();
        peroBox2 = new javax.swing.JCheckBox();
        peroBox3 = new javax.swing.JCheckBox();
        peroBox4 = new javax.swing.JCheckBox();
        peroBox5 = new javax.swing.JCheckBox();
        peroBox6 = new javax.swing.JCheckBox();
        perodi2 = new javax.swing.JLabel();
        perodi3 = new javax.swing.JLabel();
        perodi4 = new javax.swing.JLabel();
        perodi5 = new javax.swing.JLabel();
        perodi6 = new javax.swing.JLabel();
        perodi7 = new javax.swing.JLabel();
        horariosPero1 = new javax.swing.JFormattedTextField();
        horariosPero2 = new javax.swing.JFormattedTextField();
        horariosPero3 = new javax.swing.JFormattedTextField();
        horariosPero4 = new javax.swing.JFormattedTextField();
        horariosPero5 = new javax.swing.JFormattedTextField();
        horariosPero6 = new javax.swing.JFormattedTextField();
        duracionPero1 = new javax.swing.JFormattedTextField();
        duracionPero2 = new javax.swing.JFormattedTextField();
        duracionPero3 = new javax.swing.JFormattedTextField();
        duracionPero4 = new javax.swing.JFormattedTextField();
        duracionPero5 = new javax.swing.JFormattedTextField();
        duracionPero6 = new javax.swing.JFormattedTextField();
        periodo = new javax.swing.JComboBox<>();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registrar Reserva");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 230, 40));

        logoUTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoUTN_200px.png"))); // NOI18N
        getContentPane().add(logoUTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione tipo de reserva:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 570, 10));

        deEspo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deEspo.setForeground(new java.awt.Color(255, 255, 255));
        deEspo.setText("Escriba la fecha deseada:");
        getContentPane().add(deEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 30));

        fechaCombo.setMaxSelectableDate(new java.util.Date(2524622517000L));
        fechaCombo.setMinSelectableDate(new java.util.Date(-62135755083000L));
        getContentPane().add(fechaCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 120, 30));

        horarioEspo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        horarioEspo.setForeground(new java.awt.Color(255, 255, 255));
        horarioEspo.setText("hs");
        getContentPane().add(horarioEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, 30));

        try {
            horariosEspo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosEspo.setText("09:00  ");
        getContentPane().add(horariosEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 50, -1));

        horarioEspo1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        horarioEspo1.setForeground(new java.awt.Color(255, 255, 255));
        horarioEspo1.setText("Horario:");
        getContentPane().add(horarioEspo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, 30));

        horarioEspo2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        horarioEspo2.setForeground(new java.awt.Color(255, 255, 255));
        horarioEspo2.setText("Duración:");
        getContentPane().add(horarioEspo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, -1, 30));

        horarioEspo3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        horarioEspo3.setForeground(new java.awt.Color(255, 255, 255));
        horarioEspo3.setText("hs");
        getContentPane().add(horarioEspo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Horario", "Duración"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaFechas.setViewportView(jTable1);

        getContentPane().add(listaFechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 300, 120));

        try {
            duracionEspo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionEspo.setText("02:00");
        getContentPane().add(duracionEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 50, -1));

        agregarEspo.setText("Agregar");
        agregarEspo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        agregarEspo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarEspoActionPerformed(evt);
            }
        });
        getContentPane().add(agregarEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 570, 10));

        cant_alumnos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cant_alumnos.setForeground(new java.awt.Color(255, 255, 255));
        cant_alumnos.setText("Nombre de cátedra/seminario/curso:");
        getContentPane().add(cant_alumnos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, 30));

        cantAlumnosText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantAlumnosTextActionPerformed(evt);
            }
        });
        getContentPane().add(cantAlumnosText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 60, -1));

        cant_alumnos1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cant_alumnos1.setForeground(new java.awt.Color(255, 255, 255));
        cant_alumnos1.setText("Cantidad de alumnos:");
        getContentPane().add(cant_alumnos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, 30));

        tipoAulaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin recursos adicionales", "Informática", "Multimedios" }));
        tipoAulaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoAulaComboActionPerformed(evt);
            }
        });
        getContentPane().add(tipoAulaCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 170, 30));

        cant_alumnos2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cant_alumnos2.setForeground(new java.awt.Color(255, 255, 255));
        cant_alumnos2.setText("Tipo de aula:");
        getContentPane().add(cant_alumnos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, 30));

        cant_alumnos3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cant_alumnos3.setForeground(new java.awt.Color(255, 255, 255));
        cant_alumnos3.setText("Apellido y Nombre del docente:");
        getContentPane().add(cant_alumnos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, 30));

        docenteCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                docenteComboItemStateChanged(evt);
            }
        });
        getContentPane().add(docenteCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 150, 30));

        jTextField1.setEditable(false);
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 180, -1));

        cant_alumnos4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cant_alumnos4.setForeground(new java.awt.Color(255, 255, 255));
        cant_alumnos4.setText("Email del docente:");
        getContentPane().add(cant_alumnos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, 30));

        getContentPane().add(catedraCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 150, -1));

        aceptarButton.setBackground(new java.awt.Color(0, 204, 0));
        aceptarButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        aceptarButton.setForeground(new java.awt.Color(255, 255, 255));
        aceptarButton.setText("Aceptar");
        aceptarButton.setBorderPainted(false);
        aceptarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aceptarButton.setOpaque(true);
        aceptarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aceptarButtonMouseClicked(evt);
            }
        });
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(aceptarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 490, 90, 30));

        cancelarButton.setBackground(new java.awt.Color(255, 0, 0));
        cancelarButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cancelarButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelarButton.setText("Cancelar");
        cancelarButton.setBorderPainted(false);
        cancelarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarButton.setOpaque(true);
        cancelarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarButtonMouseClicked(evt);
            }
        });
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, -1, 30));

        reserva.add(periodica);
        periodica.setForeground(new java.awt.Color(255, 255, 255));
        periodica.setText("Periodica");
        periodica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodicaActionPerformed(evt);
            }
        });
        getContentPane().add(periodica, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 90, -1));

        reserva.add(esporadica);
        esporadica.setForeground(new java.awt.Color(255, 255, 255));
        esporadica.setText("Esporádica");
        esporadica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esporadicaActionPerformed(evt);
            }
        });
        getContentPane().add(esporadica, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        errorFecha.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        errorFecha.setForeground(new java.awt.Color(255, 0, 0));
        errorFecha.setText("(*)");
        getContentPane().add(errorFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 20, 30));

        errorHorario.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        errorHorario.setForeground(new java.awt.Color(255, 0, 0));
        errorHorario.setText("(*)");
        getContentPane().add(errorHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 20, 30));

        errorDuracion.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        errorDuracion.setForeground(new java.awt.Color(255, 0, 0));
        errorDuracion.setText("(*)");
        getContentPane().add(errorDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 20, 20));

        eliminarEspo.setText("Eliminar");
        eliminarEspo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        eliminarEspo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarEspoActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarEspo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, -1, -1));

        perodi1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi1.setForeground(new java.awt.Color(255, 255, 255));
        perodi1.setText("Seleccione:");
        getContentPane().add(perodi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, 30));

        peroBox1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox1.setForeground(new java.awt.Color(255, 255, 255));
        peroBox1.setText("Lunes");
        getContentPane().add(peroBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, 30));

        peroBox2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox2.setForeground(new java.awt.Color(255, 255, 255));
        peroBox2.setText("Martes");
        peroBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peroBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(peroBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, 30));

        peroBox3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox3.setForeground(new java.awt.Color(255, 255, 255));
        peroBox3.setText("Miércoles");
        peroBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peroBox3ActionPerformed(evt);
            }
        });
        getContentPane().add(peroBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, 30));

        peroBox4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox4.setForeground(new java.awt.Color(255, 255, 255));
        peroBox4.setText("Jueves");
        peroBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peroBox4ActionPerformed(evt);
            }
        });
        getContentPane().add(peroBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, -1, 30));

        peroBox5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox5.setForeground(new java.awt.Color(255, 255, 255));
        peroBox5.setText("Viernes");
        peroBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peroBox5ActionPerformed(evt);
            }
        });
        getContentPane().add(peroBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, -1, 30));

        peroBox6.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        peroBox6.setForeground(new java.awt.Color(255, 255, 255));
        peroBox6.setText("Sábado");
        peroBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peroBox6ActionPerformed(evt);
            }
        });
        getContentPane().add(peroBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, -1, 30));

        perodi2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi2.setForeground(new java.awt.Color(255, 255, 255));
        perodi2.setText("Días");
        getContentPane().add(perodi2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, -1, 30));

        perodi3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi3.setForeground(new java.awt.Color(255, 255, 255));
        perodi3.setText("Duración");
        getContentPane().add(perodi3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, -1, 30));

        perodi4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi4.setForeground(new java.awt.Color(255, 255, 255));
        perodi4.setText("Días");
        getContentPane().add(perodi4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, 30));

        perodi5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi5.setForeground(new java.awt.Color(255, 255, 255));
        perodi5.setText("Horario");
        getContentPane().add(perodi5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, -1, 30));

        perodi6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi6.setForeground(new java.awt.Color(255, 255, 255));
        perodi6.setText("Horario");
        getContentPane().add(perodi6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, -1, 30));

        perodi7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        perodi7.setForeground(new java.awt.Color(255, 255, 255));
        perodi7.setText("Duración");
        getContentPane().add(perodi7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, 30));

        try {
            horariosPero1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero1.setText("09:00  ");
        getContentPane().add(horariosPero1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 50, -1));

        try {
            horariosPero2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero2.setText("09:00  ");
        getContentPane().add(horariosPero2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 50, 30));

        try {
            horariosPero3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero3.setText("09:00  ");
        getContentPane().add(horariosPero3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 50, 30));

        try {
            horariosPero4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero4.setText("09:00  ");
        getContentPane().add(horariosPero4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 50, 30));

        try {
            horariosPero5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero5.setText("09:00  ");
        getContentPane().add(horariosPero5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, 50, 30));

        try {
            horariosPero6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horariosPero6.setText("09:00  ");
        getContentPane().add(horariosPero6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 50, 30));

        try {
            duracionPero1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero1.setText("02:00");
        getContentPane().add(duracionPero1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 50, -1));

        try {
            duracionPero2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero2.setText("02:00");
        getContentPane().add(duracionPero2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 50, -1));

        try {
            duracionPero3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero3.setText("02:00");
        getContentPane().add(duracionPero3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 50, -1));

        try {
            duracionPero4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero4.setText("02:00");
        getContentPane().add(duracionPero4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 50, -1));

        try {
            duracionPero5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero5.setText("02:00");
        getContentPane().add(duracionPero5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, 50, -1));

        try {
            duracionPero6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        duracionPero6.setText("02:00");
        getContentPane().add(duracionPero6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, 50, -1));

        periodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Primer Semestre", "Segundo Semestre", "Anual" }));
        getContentPane().add(periodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/simple-blue-ii.jpg"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cantAlumnosTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantAlumnosTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantAlumnosTextActionPerformed

    private void aceptarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aceptarButtonMouseClicked

    }//GEN-LAST:event_aceptarButtonMouseClicked

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
        boolean aux=true;
        if (this.periodica.isSelected()){ //validar si los campos si la reserva seleccionada es periodica
            //VERIFICA SI NO HAY NINGUN DIA SELECCIONADO
            if(!(this.peroBox1.isSelected()) && !(this.peroBox2.isSelected()) && !(this.peroBox3.isSelected()) && !(this.peroBox4.isSelected()) && !(this.peroBox5.isSelected()) && !(this.peroBox6.isSelected())){
                JOptionPane.showMessageDialog(null,"Seleccione los días correspondientes","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
                aux=false;
            }
            if (!validarPero()){
                JOptionPane.showMessageDialog(null,"Uno de los horarios ingresados es erroneo","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
                aux=false;
            }
        }
        //SEGUIR VALIDANDO
        String tipo = periodica.isSelected()? "Periodica" : "Esporadica";
        
        if(aux){
            //CAMPO TEXTO CANTIDAD DE ALUMNOS NO VACIO
            String cantAlumnos = this.cantAlumnosText.getText();
            if(cantAlumnos.isEmpty()){
                
            }else{
                //TODO OK!!! IR AL CASO DE USO 5
                DateFormat timeFormat = new SimpleDateFormat("hh:mm");
                DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                
                condicionDTO condicion = new condicionDTO();
                condicion.cant_alumnos = Integer.parseInt(cantAlumnos);
                condicion.tipo = tipo;
                //cambiar texto tipo aula
                condicion.tipoAula = aula.getTipoAula(tipoAulaCombo.getSelectedItem().toString());
                
                //debe incluir el año el numero de periodo? como su id?
                List<String> horarioSinFormato = new ArrayList<>();
                List<String> duracionSinFormato = new ArrayList<>();
                if(tipo.equals("Periodica")){
                    Date hoy = new Date();
                    int periodoId = (periodo.getSelectedIndex()+1)*100+((hoy.getYear())%100);
                    System.out.println("Periodo: "+periodoId);
                    condicion.periodo = (periodoId);
                    Date horario = new Date();
                    Calendar fecha = Calendar.getInstance();
                    
                    if(peroBox1.isSelected()){
                        
                        try {
                            // necesita condicion.fechas?
                            condicion.dias.add("Lunes");
                            horario =timeFormat.parse(horariosPero1.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero1.getText()));
                            horarioSinFormato.add(horariosPero1.getText());
                            duracionSinFormato.add(duracionPero1.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if(peroBox2.isSelected()){
                        try {
                            condicion.dias.add("Martes");
                            horario =timeFormat.parse(horariosPero2.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero2.getText()));
                            horarioSinFormato.add(horariosPero2.getText());
                            duracionSinFormato.add(duracionPero2.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if(peroBox3.isSelected()){
                        try {
                            condicion.dias.add("Miercoles");
                            horario =timeFormat.parse(horariosPero3.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero3.getText()));
                            horarioSinFormato.add(horariosPero3.getText());
                            duracionSinFormato.add(duracionPero3.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if(peroBox4.isSelected()){
                        try {
                            condicion.dias.add("Jueves");
                            horario =timeFormat.parse(horariosPero4.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero4.getText()));
                            horarioSinFormato.add(horariosPero4.getText());
                            duracionSinFormato.add(duracionPero4.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if(peroBox5.isSelected()){
                        try {
                            condicion.dias.add("Viernes");
                            horario =timeFormat.parse(horariosPero5.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero5.getText()));
                            horarioSinFormato.add(horariosPero5.getText());
                            duracionSinFormato.add(duracionPero5.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if(peroBox6.isSelected()){
                        try {
                            condicion.dias.add("Sabado");
                            horario =timeFormat.parse(horariosPero6.getText());
                            condicion.horarios.add(horario);
                            fecha.set(Calendar.HOUR_OF_DAY, horario.getHours());
                            fecha.set(Calendar.MINUTE, horario.getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(duracionPero6.getText()));
                            horarioSinFormato.add(horariosPero6.getText());
                            duracionSinFormato.add(duracionPero6.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                else{
                    for(int i=0; i<jTable1.getRowCount(); i++){
                        Calendar fecha = Calendar.getInstance();
                        try {
                            Date fechaTemp = dateFormat.parse(jTable1.getValueAt(i, 0).toString());
                            fecha.setTime(fechaTemp);
                            condicion.horarios.add( timeFormat.parse(jTable1.getValueAt(i, 1).toString()));
                            fecha.set(Calendar.HOUR_OF_DAY, condicion.horarios.get(i).getHours());
                            fecha.set(Calendar.MINUTE, condicion.horarios.get(i).getMinutes());
                            condicion.fechas.add(fecha);
                            condicion.duracion.add( timeFormat.parse(jTable1.getValueAt(i, 2).toString()));
                        } catch (ParseException ex) {
                            Logger.getLogger(registrarReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } 
                    
                    condicion.dias = gestorReservas.getDiasSemanas(condicion.fechas);
                }
                
                
                List<aula[]> aulas = gestorAula.buscarDisponibilidad(condicion);
                
                seleccionarAula menuAulas = new seleccionarAula(); 
                menuAulas.aulas = aulas;
                if(this.esporadica.isSelected()){
                    for(int i=0; i<jTable1.getRowCount(); i++){
                        Object[] fecha = new Object[3];
                        for(int j=0; j<3; j++){
                            fecha[j] = jTable1.getModel().getValueAt(i,j);
                        }
                        menuAulas.fechas.add(fecha);
                    }
                }
                if (this.periodica.isSelected()){
                    for (int i=0; i<condicion.dias.size(); i++){
                        Object[] dias = new Object[3];
                        dias[0] = condicion.dias.get(i);
                        dias[1] = horarioSinFormato.get(i);
                        dias[2] = duracionSinFormato.get(i);
                        menuAulas.fechas.add(dias);
                    }
                }
                menuAulas.cargarTablaFechas();
                menuAulas.cargarTablaAulas(0);
                menuAulas.setVisible(true);
                
                
                this.setVisible(false);
                
                reservaDTO reservaDatos = new reservaDTO();
                reservaDatos.setTipo(tipo);
                reservaDatos.setCant_alumnos(Integer.parseInt(cantAlumnos));
                reservaDatos.setDuracion(condicion.duracion);
                reservaDatos.setFechas(condicion.dias);
                reservaDatos.setHorarios(condicion.fechas);
                //periodo con anio o sin anio ?
                reservaDatos.setIdPeriodo(condicion.periodo);
                //seleccionar las aulas
                
                reservaDatos.setIdClase(clases.get(catedraCombo.getSelectedIndex()).idClase);
                reservaDatos.setIdDocente(docentes.get(docenteCombo.getSelectedIndex()).idDocente);
                
                menuAulas.reserva = reservaDatos;
                
                this.dispose();
                
            }
            
        }
        
    }//GEN-LAST:event_aceptarButtonActionPerformed
    private boolean validarPero(){
        boolean aux=true;
        if(this.peroBox1.isSelected()){
            if(!validarHorario(this.horariosPero1.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero1.getText())){
                    aux=false;
                }
            }
        }
        if(this.peroBox2.isSelected()){
            if(!validarHorario(this.horariosPero2.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero2.getText())){
                    aux=false;
                }
            }
        }
        if(this.peroBox3.isSelected()){
            if(!validarHorario(this.horariosPero3.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero3.getText())){
                    aux=false;
                }
            }
        }
        if(this.peroBox4.isSelected()){
            if(!validarHorario(this.horariosPero4.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero4.getText())){
                    aux=false;
                }
            }
        }
        if(this.peroBox5.isSelected()){
            if(!validarHorario(this.horariosPero5.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero5.getText())){
                    aux=false;
                }
            }
        }
        if(this.peroBox6.isSelected()){
            if(!validarHorario(this.horariosPero6.getText())){
              aux=false;
            }else{
                if(!validarDuracion(this.duracionPero6.getText())){
                    aux=false;
                }
            }
        }
        return aux;
    }
    private void cancelarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarButtonMouseClicked

        this.dispose();
    }//GEN-LAST:event_cancelarButtonMouseClicked

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void periodicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodicaActionPerformed
        this.deEspo.setVisible(false);
        this.duracionEspo.setVisible(false);
        this.fechaCombo.setVisible(false);
        this.horarioEspo.setVisible(false);
        this.horarioEspo1.setVisible(false);
        this.horarioEspo3.setVisible(false);
        this.horarioEspo2.setVisible(false);
        this.horariosEspo.setVisible(false);
        this.listaFechas.setVisible(false);
        this.agregarEspo.setVisible(false);
        this.eliminarEspo.setVisible(false);
        
        this.periodo.setVisible(true);
        this.duracionPero1.setVisible(true);
        this.duracionPero2.setVisible(true);
        this.duracionPero3.setVisible(true);
        this.duracionPero4.setVisible(true);
        this.duracionPero5.setVisible(true);
        this.duracionPero6.setVisible(true);
        this.horariosPero1.setVisible(true);
        this.horariosPero2.setVisible(true);
        this.horariosPero3.setVisible(true);
        this.horariosPero4.setVisible(true);
        this.horariosPero5.setVisible(true);
        this.horariosPero6.setVisible(true);
        this.peroBox1.setVisible(true);
        this.peroBox2.setVisible(true);
        this.peroBox3.setVisible(true);
        this.peroBox4.setVisible(true);
        this.peroBox5.setVisible(true);
        this.peroBox6.setVisible(true);
        this.perodi1.setVisible(true);
        this.perodi2.setVisible(true);
        this.perodi3.setVisible(true);
        this.perodi4.setVisible(true);
        this.perodi5.setVisible(true);
        this.perodi6.setVisible(true);
        this.perodi7.setVisible(true);
        
        
        
    }//GEN-LAST:event_periodicaActionPerformed

    private void esporadicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esporadicaActionPerformed
        this.deEspo.setVisible(true);
        this.duracionEspo.setVisible(true);
        this.fechaCombo.setVisible(true);
        this.horarioEspo.setVisible(true);
        this.horarioEspo1.setVisible(true);
        this.horarioEspo3.setVisible(true);
        this.horarioEspo2.setVisible(true);
        this.horariosEspo.setVisible(true);
        this.listaFechas.setVisible(true);
        this.agregarEspo.setVisible(true);
        this.eliminarEspo.setVisible(true);
        
        this.periodo.setVisible(false);
        this.duracionPero1.setVisible(false);
        this.duracionPero2.setVisible(false);
        this.duracionPero3.setVisible(false);
        this.duracionPero4.setVisible(false);
        this.duracionPero5.setVisible(false);
        this.duracionPero6.setVisible(false);
        this.horariosPero1.setVisible(false);
        this.horariosPero2.setVisible(false);
        this.horariosPero3.setVisible(false);
        this.horariosPero4.setVisible(false);
        this.horariosPero5.setVisible(false);
        this.horariosPero6.setVisible(false);
        this.peroBox1.setVisible(false);
        this.peroBox2.setVisible(false);
        this.peroBox3.setVisible(false);
        this.peroBox4.setVisible(false);
        this.peroBox5.setVisible(false);
        this.peroBox6.setVisible(false);
        this.perodi1.setVisible(false);
        this.perodi2.setVisible(false);
        this.perodi3.setVisible(false);
        this.perodi4.setVisible(false);
        this.perodi5.setVisible(false);
        this.perodi6.setVisible(false);
        this.perodi7.setVisible(false);
    }//GEN-LAST:event_esporadicaActionPerformed

    private void agregarEspoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarEspoActionPerformed
        Date fecha = this.fechaCombo.getDate();
        String hora = this.horariosEspo.getText();
        String duracion = this.duracionEspo.getText();
        Date fhoy = new Date();
        Date fres = this.fechaCombo.getDate();
        
        this.errorFecha.setVisible(false);
        this.errorDuracion.setVisible(false);
        this.errorHorario.setVisible(false);
        
        boolean aux =false;
        
        if(fecha == null){
            JOptionPane.showMessageDialog(null,"El campo fecha, no puede estar vacio","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
            this.errorFecha.setVisible(true);
            aux=true;
        }
        
        if(fhoy.after(fres)){ //evaluar si es fecha es anterior a la actual
            JOptionPane.showMessageDialog(null,"Fecha erronea","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
            this.errorFecha.setVisible(true);
            aux=true;
        }
        if (!validarHorario(hora)){
            JOptionPane.showMessageDialog(null,"Horario erroneo","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
            this.errorHorario.setVisible(true);
            aux=true;
        }
        if(!validarDuracion(duracion)){
            JOptionPane.showMessageDialog(null,"Duracion erronea","Mensaje de Error",JOptionPane.ERROR_MESSAGE);
            this.errorDuracion.setVisible(true);
            aux=true;
        }
        
        if(!aux){
        //TODO OK, LLAMAR FUNCION AGREGAR
        //JOptionPane.showMessageDialog(null,"Agregado","Mensaje de OK",JOptionPane.INFORMATION_MESSAGE);
        String sFecha = this.fechaCombo.getDateFormatString();
        agregarFila();
        }          
        
    }//GEN-LAST:event_agregarEspoActionPerformed
       
    public void agregarFila(){
         DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
         Object [] fila=new Object[3];
         
         SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
         String fecha = format.format(this.fechaCombo.getDate());
         
         fila[0]=fecha;
         fila[1]=this.horariosEspo.getText();
         fila[2]=this.duracionEspo.getText();
         
         modelo.addRow(fila);
         jTable1.setModel(modelo);
         
    }
    private void tipoAulaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoAulaComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoAulaComboActionPerformed

    private void eliminarEspoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarEspoActionPerformed
          
          DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
         
          int a = jTable1.getSelectedRow(); 
         
          if (a<0){ 
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla" ); 
         }else {
            model.removeRow(a); 
            //JOptionPane.showMessageDialog(null,"Registro Eliminado" );
        } 
    }//GEN-LAST:event_eliminarEspoActionPerformed

    private void peroBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peroBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peroBox2ActionPerformed

    private void peroBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peroBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peroBox3ActionPerformed

    private void peroBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peroBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peroBox4ActionPerformed

    private void peroBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peroBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peroBox5ActionPerformed

    private void peroBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peroBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peroBox6ActionPerformed

    private void docenteComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_docenteComboItemStateChanged
        // TODO add your handling code here:
        jTextField1.setText(docentes.get(docenteCombo.getSelectedIndex()).email);
        
    }//GEN-LAST:event_docenteComboItemStateChanged
    private static boolean validarHorario(String hora){
           int horas=0;
           int minutos=0;
           String horasStr = hora.substring(0,2);
           String minutosStr = hora.substring(3,5);
           try {
               horas = Integer.parseInt(horasStr);
               minutos = Integer.parseInt(minutosStr);
           } catch (Exception e) {
               return false;
           }
               if (horas < 0 || horas > 23)
               {
                   return false;
               }
               else
               {
                   if (minutos <0 || minutos >59)
                   {
                        return false;
                   }
               }
            return true;
    }
    private static boolean validarDuracion(String duracion){
        int dhoras=0;
        int dminutos=0;
        String dhorasStr = duracion.substring(0,2);
        String dminutosStr = duracion.substring(3, 5);
        try {
               dhoras = Integer.parseInt(dhorasStr);
               dminutos = Integer.parseInt(dminutosStr);
           } catch (Exception e) {
               return false;
           }
               if (dhoras < 0 || dhoras > 23) //duda con esto
               {
                   return false;
               }
               else
               {
                   if (dminutos <0 || dminutos >59)
                   {
                        return false;
                   }
               }
            return true;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrarReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JButton agregarEspo;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JTextField cantAlumnosText;
    private javax.swing.JLabel cant_alumnos;
    private javax.swing.JLabel cant_alumnos1;
    private javax.swing.JLabel cant_alumnos2;
    private javax.swing.JLabel cant_alumnos3;
    private javax.swing.JLabel cant_alumnos4;
    private javax.swing.JComboBox<String> catedraCombo;
    private javax.swing.JLabel deEspo;
    private javax.swing.JComboBox<String> docenteCombo;
    private javax.swing.JFormattedTextField duracionEspo;
    private javax.swing.JFormattedTextField duracionPero1;
    private javax.swing.JFormattedTextField duracionPero2;
    private javax.swing.JFormattedTextField duracionPero3;
    private javax.swing.JFormattedTextField duracionPero4;
    private javax.swing.JFormattedTextField duracionPero5;
    private javax.swing.JFormattedTextField duracionPero6;
    private javax.swing.JButton eliminarEspo;
    private javax.swing.JLabel errorDuracion;
    private javax.swing.JLabel errorFecha;
    private javax.swing.JLabel errorHorario;
    private javax.swing.JRadioButton esporadica;
    private com.toedter.calendar.JDateChooser fechaCombo;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel horarioEspo;
    private javax.swing.JLabel horarioEspo1;
    private javax.swing.JLabel horarioEspo2;
    private javax.swing.JLabel horarioEspo3;
    private javax.swing.JFormattedTextField horariosEspo;
    private javax.swing.JFormattedTextField horariosPero1;
    private javax.swing.JFormattedTextField horariosPero2;
    private javax.swing.JFormattedTextField horariosPero3;
    private javax.swing.JFormattedTextField horariosPero4;
    private javax.swing.JFormattedTextField horariosPero5;
    private javax.swing.JFormattedTextField horariosPero6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane listaFechas;
    private javax.swing.JLabel logoUTN;
    private javax.swing.JRadioButton periodica;
    private javax.swing.JComboBox<String> periodo;
    private javax.swing.JCheckBox peroBox1;
    private javax.swing.JCheckBox peroBox2;
    private javax.swing.JCheckBox peroBox3;
    private javax.swing.JCheckBox peroBox4;
    private javax.swing.JCheckBox peroBox5;
    private javax.swing.JCheckBox peroBox6;
    private javax.swing.JLabel perodi1;
    private javax.swing.JLabel perodi2;
    private javax.swing.JLabel perodi3;
    private javax.swing.JLabel perodi4;
    private javax.swing.JLabel perodi5;
    private javax.swing.JLabel perodi6;
    private javax.swing.JLabel perodi7;
    private javax.swing.ButtonGroup reserva;
    private javax.swing.JComboBox<String> tipoAulaCombo;
    // End of variables declaration//GEN-END:variables


}
